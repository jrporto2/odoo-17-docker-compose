services:
  postgres: 
    image: postgres:16 
    container_name: c_postgres
    user: root
    hostname: postgres                         # Hostname for the PostgreSQL container	
    restart: unless-stopped                    # Reinicie el contenedor a menos que se detenga manualmente
    environment:
      - POSTGRES_USER=${DB_USER}                     # PostgreSQL user
      - POSTGRES_PASSWORD=${DB_PASSWORD}          # PostgreSQL password
      - POSTGRES_DB=${DB_NAME}                  # PostgreSQL database name
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=en_US.UTF-8
      - PGDATA=/var/lib/postgresql/data/pgdata # Define la ruta donde se almacenarán los datos de PostgreSQL
    volumes: 
      - ./datadrive/postgres/db:/var/lib/postgresql/data
      - ./datadrive/postgres/custom-init-scripts:/docker-entrypoint-initdb.d
    healthcheck: 
      test: 
        [
          "CMD-SHELL", 
          "pg_isready -U ${DB_USER} -d ${DB_NAME} || exit 1"
        ]
      interval: 30s                            # Intervalo entre cada chequeo de salud
      timeout: 5s                             # Tiempo máximo para esperar una respuesta del chequeo de salud
      retries: 3                               # Número de intentos antes de considerar que el servicio no está disponible
      start_period: 10s  # Tiempo de gracia para iniciar
  pgadmin:
    image: dpage/pgadmin4
    container_name: c_pgadmin4
    user: root
    restart: unless-stopped
    environment:
      #PGADMIN_DEFAULT_EMAIL: admin@multipath.com.pe
      #PGADMIN_DEFAULT_PASSWORD: admin
      #PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
      #PGADMIN_LISTEN_PORT: 80
      #SCRIPT_NAME: /pgadmin
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_CONFIG_WTF_CSRF_ENABLED=False
      - PGADMIN_LISTEN_PORT=5050   
    volumes:
      - ./datadrive/pgadmin/data:/var/lib/pgadmin
    depends_on:
      - postgres
  odoo17:
    image: odoo:17
    user: root
    container_name: c_odoo17
    restart: unless-stopped  
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - TZ=America/Lima  # Zona horaria de Perú (GMT-5)
      - LANG=es_PE.UTF-8  # Configuración regional para Perú
      - HOST=postgres
      - USER=${DB_USER}
      - PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - LOGFILE=/etc/odoo/odoo-server.log
      - FILESTORE_PATH=/var/lib/odoo/filestore
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      #- ./datadrive/entrypoint.sh:/entrypoint.sh   # if you want to install additional Python packages, uncomment this line!
      #- ./datadrive/odoo_logs:/var/log/odoo
      - ./datadrive/odoo/addons:/mnt/extra-addons
      - ./datadrive/odoo/etc:/etc/odoo
      - ./datadrive/odoo/filestore:/var/lib/odoo/filestore
  nginx:
    image: nginx:latest
    user: root
    container_name: c_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./datadrive/nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Archivo de configuración de Nginx
      - ./datadrive/nginx/logs:/var/log/nginx  # Carpeta para guardar logs de Nginx
      - ./datadrive/nginx/conf.d:/etc/nginx/conf.d
      - ./datadrive/nginx/certs:/etc/letsencrypt  # Certificados SSL de Let's Encrypt
    depends_on:
      - odoo17

